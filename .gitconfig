[core]
    editor = vim

[user]
    name = Ondřej Čertík
    email = ondrej@certik.us

[color]
    diff  = auto
    status= auto
    branch= auto
    interactive = true

[alias]
    ci = commit
    cim = commit -a --amend --no-edit
    di = diff --color-words
    st = status --ignored
    co = checkout
    co-gh = "!bash -c ': git branch ; if [ \"$#\" -eq 1 ] && echo \"$1\" | grep -qE \"^[^/:]+:.+\\$\"; then IFS=: read -r remote branch <<<\"$1\"; origin_url=$(git remote get-url origin); repo_name=$(basename -s .git \"$origin_url\"); git remote get-url \"$remote\" 2>/dev/null || git remote add \"$remote\" \"git@github.com:$remote/$repo_name.git\"; if git fetch \"$remote\" \"$branch\"; then local_branch=\"${remote}-${branch//\\//-}\"; git show-ref --verify --quiet \"refs/heads/$local_branch\" && git checkout \"$local_branch\" || git checkout -b \"$local_branch\" \"$remote/$branch\"; else echo \"Error: Remote branch $remote:$branch not found.\"; fi; else git checkout \"$@\"; fi' -"
    gl = log --decorate --oneline --graph
    st2 = status -uno
    targz = !git archive --prefix=`basename $PWD`/ master | gzip > `basename $PWD`.tar.gz
    targz2 = !git archive --prefix=`basename $PWD`/ master | gzip > `basename $PWD`_tar_gz
    # Use this as follows: git sed old_method_name new_method_name
    sed = !sh -c 'git grep --null --full-name --name-only --perl-regexp -e \"$1\" | xargs -0 perl -i -p -e \"s/$1/$2/g\"' -
    pr-github = !sh -c 'git fetch $1 pull/$2/head:pr-$1-$2 && git checkout pr-$1-$2' -
    pr-bitbucket = !sh -c 'git fetch $1 pull-requests/$2/from:pr-$1-$2 && git checkout pr-$1-$2' -
    mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -
    bclean = "!f() { git checkout ${1-master} && git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
    up = !git pull --rebase --prune $@ && git remote update -p
    bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
    prune-branches = !git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d
    automerge = push -o merge_request.create -o merge_request.merge_when_pipeline_succeeds -o merge_request.remove_source_branch
    createmr = !sh -c 'git push $1 $2 -o merge_request.create -o merge_request.remove_source_branch -o merge_request.title="$3"'
    #-o merge_request.description="The description I want"
